
import { createSlice } from '@reduxjs/toolkit';

// Define the initial state for the cart slice.
// 'items' is an array that will hold all the products added to the cart.
const initialState = {
    items: [],
};

// Create a slice for the cart using createSlice.
// A slice in Redux is a way to organize the state and reducers for a specific feature.
const cartSlice = createSlice({
    // The name of this slice of state, which will be used as a key in the Redux store.
    name: 'cart',

    // The initial state for the slice, which we defined above.
    initialState,

    // Reducers are functions that define how the state can be updated.
    // This object contains all the reducers related to the cart.
    reducers: {
        // A reducer to handle adding items to the cart.
        // The state parameter represents the current state of the slice.
        // The action parameter contains any additional data that is passed when the action is dispatched.
        addItemToCart: (state, action) => {
            // The payload of the action contains the item to be added to the cart.
            const item = action.payload;

            // Push the item into the 'items' array in the state.
            // Redux Toolkit allows direct mutation of state like this due to the use of Immer under the hood.
            state.items.push(item);
        },
    },
});

// Export the action creators generated by createSlice.
// These are functions that you can call in your components to dispatch the corresponding actions.
export const { addItemToCart } = cartSlice.actions;

// This function will be called when actions are dispatched, and it will update the state accordingly.
export default cartSlice.reducer;
